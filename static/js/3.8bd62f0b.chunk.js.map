{"version":3,"sources":["components/Users/Users.module.css","components/Common/Paginator/Paginator.module.css","../node_modules/classnames/index.js","components/Common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"names":["module","exports","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","default","Paginator","totalItemCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","useState","portionNumber","setPortionNumber","portionCount","leftPortionPageNumber","rightPortionPageNumber","className","cn","styles","listContainer","listContainerCn","onClick","filter","p","map","selectedPage","unSelectedPage","User","user","isFollowingProgress","unFollow","follow","to","id","src","photos","small","userPhoto","Follow","followed","userId","name","status","Users","totalUsersCount","isFetching","users","Preloader","u","UsersContainer","pageNumber","props","requestUsers","this","pageTitle","toggleIsFetching","React","Component","compose","connect","state","selectUsers","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getIsFollowingProgress"],"mappings":"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","file":"static/js/3.8bd62f0b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__2xFJp\",\"userPhoto\":\"Users_userPhoto__1t5f-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"Paginator_listContainer__RQ9OM\",\"listContainerCn\":\"Paginator_listContainerCn__3a6o_\",\"selectedPage\":\"Paginator_selectedPage__vuYZk\",\"unSelectedPage\":\"Paginator_unSelectedPage__3PrPg\"};","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from 'classnames';\r\n\r\ntype PropsType = {\r\n    totalItemCount: number,\r\n    pageSize: number,\r\n    currentPage: number,\r\n    onPageChanged: ((p: number) => void),\r\n    portionSize?: number\r\n}\r\n\r\nconst Paginator: React.FC<PropsType> = ({totalItemCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemCount / pageSize);\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let [portionNumber, setPortionNumber] = useState<number>(1);\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    if(portionNumber === null) {portionNumber=1}\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={cn(styles.listContainer, styles.listContainerCn)}>\r\n            {leftPortionPageNumber > 1 &&\r\n            <button onClick={() => setPortionNumber(1)}>begin</button>\r\n            }\r\n            {leftPortionPageNumber > 1 &&\r\n            <button onClick={() => setPortionNumber(portionNumber - 1)}>prev</button>}\r\n            {pages\r\n                .filter((p: number) => p <= rightPortionPageNumber && p >= leftPortionPageNumber)\r\n                .map(p => {\r\n                    let selectedPage = currentPage === p;\r\n                    return <span key={p}\r\n                                 className={cn({[styles.selectedPage]: selectedPage},\r\n                                     {[styles.unSelectedPage]: !selectedPage})} onClick={() => {\r\n                        !selectedPage &&\r\n                        onPageChanged(p)\r\n                    }\r\n                    }>{p}</span>\r\n                })}\r\n            <span>\r\n            {rightPortionPageNumber < pagesCount &&\r\n            <button onClick={() => setPortionNumber(portionNumber + 1)}>next</button>\r\n            }\r\n                {rightPortionPageNumber < pagesCount &&\r\n                <button onClick={() => setPortionNumber(portionCount)}>end</button>\r\n                }</span>\r\n        </div>\r\n    )\r\n}\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport Follow from \"../Common/Follow/Follow\";\r\nimport {UserType} from \"../../Types/Types\";\r\n\r\ntype PropsType = {\r\n    user: UserType,\r\n    isFollowingProgress: number[],\r\n    unFollow: (userId: number) => void,\r\n    follow: (userId: number) => void\r\n}\r\n\r\nconst User: React.FC<PropsType> = ({ user, isFollowingProgress, unFollow, follow }) => {\r\n\r\n    return (\r\n\r\n        <div >\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/Profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n             <Follow followed={user.followed} userId={user.id}\r\n                     isFollowingProgress={isFollowingProgress}\r\n                     unFollow={unFollow} follow={follow}/>\r\n            </span>\r\n            <span>\r\n                <span><div>{'user.location.city'}</div><div>{'user.location.country'}</div></span>\r\n                <span><div>{user.name}</div><div>{user.status}</div></span>\r\n                <span><div>Мой ID: {user.id}</div></span>\r\n            </span>\r\n\r\n            <hr/>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default User;","import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport {UserType} from \"../../Types/Types\";\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number,\r\n    pageSize: number,\r\n    currentPage: number,\r\n    onPageChanged: ((p: number) => void),\r\n    isFollowingProgress: number[],\r\n    unFollow: (userId: number) => void,\r\n    follow: (userId: number) => void,\r\n    isFetching: boolean,\r\n    toggleIsFetching: ((isFetching: boolean) => void),\r\n    users: Array<UserType>\r\n}\r\n\r\nconst Users: React.FC<PropsType> = ({\r\n                   totalUsersCount, pageSize, currentPage, onPageChanged,\r\n                   isFollowingProgress, unFollow, follow,\r\n                   isFetching, users\r\n               }) => {\r\n\r\n    return (\r\n        <div>\r\n            <div> {isFetching ? <Preloader/> : null}</div>\r\n            <div>\r\n                <Paginator totalItemCount={totalUsersCount} pageSize={pageSize}\r\n                           currentPage={currentPage} onPageChanged={onPageChanged}/>\r\n\r\n                <div className={styles.users}>\r\n                    {\r\n                        users.map(u => <User key={u.id} user={u} isFollowingProgress=\r\n                                                    {isFollowingProgress}\r\n                                                   unFollow={unFollow} follow={follow}/>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    unFollow,\r\n    requestUsers, toggleIsFetching,\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\n// import {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getIsFollowingProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    selectUsers\r\n} from \"../../redux/users-selectors\";\r\nimport {UserType} from \"../../Types/Types\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype OwnPropsType = {\r\n    pageTitle: string\r\n}\r\ntype MapStatePropsType = {\r\n    currentPage: number,\r\n    pageSize: number,\r\n    isFollowingProgress: number[],\r\n    isFetching: boolean,\r\n    users: Array<UserType>,\r\n    totalUsersCount: number,\r\n}\r\ntype MapDispatchPropsType = {\r\n    unFollow: (userId: number) => void,\r\n    follow: (userId: number) => void,\r\n    requestUsers: (currentPage: number, pageSize: number) => void,\r\n    toggleIsFetching: ((isFetching: boolean) => void)\r\n}\r\n\r\ntype PropsType = OwnPropsType & MapStatePropsType & MapDispatchPropsType\r\n\r\nclass UsersContainer extends React.Component<PropsType>  {\r\n\r\n    componentDidMount() {\r\n        const {requestUsers, currentPage, pageSize} = this.props;\r\n        requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {requestUsers, pageSize} = this.props;\r\n        requestUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <h2>{this.props.pageTitle}</h2>\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unFollow={this.props.unFollow}\r\n                   isFetching={this.props.isFetching}\r\n                   isFollowingProgress={this.props.isFollowingProgress}\r\n                   toggleIsFetching={this.props.toggleIsFetching}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state: AppStateType) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         isFollowingProgress: state.usersPage.isFollowingProgress\r\n//     }\r\n// };\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: selectUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        isFollowingProgress: getIsFollowingProgress(state)\r\n    }\r\n};\r\n\r\nexport default\r\ncompose(\r\n    //TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState\r\nconnect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>\r\n(mapStateToProps, {\r\n        follow,\r\n        unFollow,\r\n        requestUsers: requestUsers,\r\n        toggleIsFetching: toggleIsFetching\r\n    }\r\n    ),\r\n    // withAuthRedirect\r\n)(UsersContainer);"],"sourceRoot":""}