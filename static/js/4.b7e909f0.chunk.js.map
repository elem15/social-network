{"version":3,"sources":["components/Dialog/Dialogs.module.css","components/Dialog/DialogItem/DialogStateForm.tsx","components/Dialog/DialogItem/DialogItem.tsx","components/Dialog/DialogItem/DialogsItemContainer.tsx","components/Dialog/Message/MessageInside.tsx","components/Dialog/Message/Message.tsx","components/Dialog/Message/MessageContainer.tsx","redux/dialog-selectors.ts","components/Dialog/DialogUsers/DialogUsers.tsx","components/Dialog/Dialogs.tsx"],"names":["module","exports","DialogStateFormRedux","reduxForm","form","onSubmitSuccess","result","dispatch","reset","handleSubmit","className","s","item","active","onSubmit","field","Field","component","renderField","name","label","validate","required","maxLength33","button","DialogState","addMessage","values","newMessageBody","DialogItem","props","dialogContent","DialogsItemContainer","connect","state","dialogs","dialogPage","isAuth","auth","addMessageActionCreator","DialogsItem","MessageInside","Typography","Text","Link","messages","st","message","Message","messageItems","reverse","map","m","id","MessageContainer","compose","withAuthRedirect","dialogsSelect","DialogUsers","useSelector","d","to","width","src","Dialogs","xs","span","offset","sm","md"],"mappings":"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","file":"static/js/4.b7e909f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__JdrrJ\",\"button\":\"Dialogs_button__kVN93\",\"dialogContent\":\"Dialogs_dialogContent__33x23\",\"dialogItems\":\"Dialogs_dialogItems__osIem\",\"field\":\"Dialogs_field__2jJQp\",\"item\":\"Dialogs_item__18_Pl\",\"active\":\"Dialogs_active__QK4rE\",\"name\":\"Dialogs_name__2Vr3x\",\"messages\":\"Dialogs_messages__2iBX6\",\"passive\":\"Dialogs_passive__2-dQ7\"};","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport {Field, reset, reduxForm} from \"redux-form\";\r\nimport {required, maxLength33} from '../../../utils/validators'\r\nimport {renderField} from \"../../Common/InputField/FormsControls\";\r\nimport { Button } from \"antd\";\r\n\r\ntype PropsType = {\r\n    addMessage: (newMessageBody: string) => void,\r\n}\r\n\r\nconst DialogState: React.FC<PropsType> = ({addMessage}) => {\r\n\r\n    let addDialog = (newMessageBody: string) => {\r\n        addMessage(newMessageBody);\r\n    };\r\n\r\n    let addNewMessage = (values: any) => {\r\n        addDialog(values.newMessageBody)\r\n    }\r\n\r\n    return <DialogStateFormRedux onSubmit={addNewMessage}/>\r\n}\r\ntype DialogStateFormType = {\r\n    handleSubmit: any\r\n}\r\nconst DialogStateForm: React.FC<DialogStateFormType> = ({handleSubmit}) => {\r\n    return <form className={s.item + ' ' + s.active} onSubmit={handleSubmit}>\r\n        <div className={s.field}>\r\n            <Field component={renderField }\r\n                   name='newMessageBody'\r\n                   label='Enter you message'\r\n                   validate={[required, maxLength33]}\r\n            />\r\n        </div>\r\n        <div>\r\n            <button className={s.button}><Button>Add post</Button></button>\r\n        </div>\r\n    </form>\r\n}\r\nconst afterSubmit = (result: string, dispatch: any) =>\r\n    dispatch(reset('dialogAddMessageForm'));\r\n\r\nconst DialogStateFormRedux  = reduxForm({form: 'dialogAddMessageForm', onSubmitSuccess: afterSubmit\r\n})(DialogStateForm)\r\n\r\nexport default DialogState;","import React from 'react';\r\nimport s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport DialogStateForm from \"./DialogStateForm\";\r\nimport {DialogsType} from \"../../../Types/Types\";\r\n\r\ntype PropsType = {\r\n    dialogs: Array<DialogsType>,\r\n    addMessage: (newMessageBody: string) => void\r\n}\r\n\r\nconst DialogItem: React.FC<PropsType> = (props) => {\r\n    return <div className={s.dialogContent}>\r\n        <DialogStateForm addMessage={props.addMessage}/>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport {addMessageActionCreator} from \"../../../redux/dialog-reducer\";\r\nimport DialogsItem from \"./DialogItem\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {DialogsType} from \"../../../Types/Types\";\r\n\r\ntype MapStatePropsType = {\r\n    dialogs: Array<DialogsType>,\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    addMessage: (newMessageBody: string) => void\r\n}\r\ntype OwnPropsType = {\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogs: state.dialogPage.dialogs,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        addMessage: (newMessageBody: string) => {dispatch(addMessageActionCreator(newMessageBody))},\r\n    }\r\n}\r\n\r\nconst DialogsItemContainer = connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>\r\n(mapStateToProps, mapDispatchToProps)(DialogsItem);\r\n\r\nexport default DialogsItemContainer;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport {Typography, Space} from 'antd';\r\n\r\nconst {Text, Link} = Typography;\r\ntype PropsType = {\r\n    message: string,\r\n    name: string,\r\n    st: string,\r\n    key: number\r\n}\r\n\r\nconst MessageInside: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.messages + ' ' + s[props.st]}>\r\n            <div className={s.name}>{props.name}:</div>\r\n            <span> {props.message} </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageInside;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport MessageInside from \"./MessageInside\";\r\nimport {MessagesType} from \"../../../Types/Types\";\r\n\r\ntype PropsType = {\r\n    messages: Array<MessagesType>\r\n}\r\n\r\nconst Message: React.FC<PropsType> = (props) => {\r\n\r\n    const messageItems = [...props.messages].reverse().map(m => <MessageInside message={m.message}\r\n                                                              name={m.name}\r\n                                                              st={m.st}\r\n                                                              key={m.id}\r\n    />)\r\n    return (\r\n        <div className={s.messages}>\r\n            <div>{messageItems}</div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\n\r\nimport Message from \"./Message\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {MessagesType} from \"../../../Types/Types\";\r\n\r\ntype MapStatePropsType = {\r\n    messages: Array<MessagesType>,\r\n}\r\ntype MapDispatchPropsType = {\r\n\r\n}\r\ntype OwnPropsType = {\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        messages: state.dialogPage.messages\r\n    }\r\n}\r\nlet mapDispatchToProps = () => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst MessageContainer = compose(withAuthRedirect,\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>\r\n    (mapStateToProps, mapDispatchToProps)\r\n    )(Message);\r\nexport default MessageContainer","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const dialogsSelect = (state: AppStateType) => state.dialogPage.dialogs;\r\n\r\n\r\n","import React from 'react';\r\nimport s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {dialogsSelect} from \"../../../redux/dialog-selectors\";\r\nimport {DialogsType} from \"../../../Types/Types\";\r\nimport { Image, Divider } from 'antd';\r\n\r\ntype PropsType = {\r\n    // dialogs: Array<DialogsType>,\r\n\r\n}\r\n\r\nconst DialogUsers: React.FC<PropsType> = () => {\r\n    const dialogs = useSelector(dialogsSelect)\r\n    return <div className={s.dialogContent}>\r\n        {\r\n            dialogs.map((d: DialogsType) => <div key={d.id}>\r\n                    <div >\r\n                        <NavLink to={'/Dialogs/' + d.id}><Image width={90} src={d.src}/>\r\n                        <div></div>\r\n                        <br/>\r\n                            {d.name}</NavLink>\r\n                        <br/>\r\n                    </div>\r\n                <Divider></Divider>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default DialogUsers;","import React from 'react';\r\nimport DialogsItemContainer from \"./DialogItem/DialogsItemContainer\";\r\nimport MessageContainer from \"./Message/MessageContainer\";\r\nimport {Col, Layout, Row} from \"antd\";\r\nimport DialogUsers from \"./DialogUsers/DialogUsers\";\r\n\r\nconst Dialogs = () => {\r\n    return (\r\n        <Layout>\r\n            <DialogsItemContainer/>\r\n            <Row>\r\n                <Col xs={{span: 10, offset: 0}}\r\n                     sm={{span: 10, offset: 0}}\r\n                     md={{span: 8, offset: 0}}>\r\n                    <DialogUsers/>\r\n                </Col>\r\n                <Col xs={{span: 12, offset: 2}}\r\n                     sm={{span: 10, offset: 2}}\r\n                     md={{span: 10, offset: 4}}>\r\n                    <MessageContainer/>\r\n                </Col>\r\n            </Row>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Dialogs;"],"sourceRoot":""}