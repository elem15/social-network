{"version":3,"sources":["components/Dialog/Dialogs.module.css","components/Dialog/DialogItem/DialogStateForm.tsx","components/Dialog/DialogItem/DialogItem.tsx","components/Dialog/DialogItem/DialogsItemContainer.tsx","components/Dialog/Message/MessageInside.tsx","components/Dialog/Message/Message.tsx","components/Dialog/Message/MessageContainer.tsx","components/Dialog/Dialogs.tsx"],"names":["module","exports","DialogStateFormRedux","reduxForm","form","onSubmitSuccess","result","dispatch","reset","handleSubmit","className","s","item","active","onSubmit","Field","component","renderField","name","label","validate","required","maxLength15","DialogState","addMessage","values","newMessageBody","DialogItem","props","dialogContent","dialogs","map","d","to","id","src","DialogsItemContainer","connect","state","dialogPage","isAuth","auth","addMessageActionCreator","DialogsItem","MessageInside","messages","st","message","Message","messageItems","m","MessageContainer","compose","withAuthRedirect","Dialogs"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,YAAc,6BAA6B,KAAO,sBAAsB,OAAS,wBAAwB,KAAO,sBAAsB,SAAW,0BAA0B,QAAU,2B,qICyCnRC,EAAwBC,YAAU,CAACC,KAAM,uBAAwBC,gBAHnD,SAACC,EAAgBC,GAAjB,OAChBA,EAASC,YAAM,2BAEWL,EAjByB,SAAC,GAAoB,IAAnBM,EAAkB,EAAlBA,aACrD,OAAO,uBAAMC,UAAWC,IAAEC,KAAO,IAAMD,IAAEE,OAAQC,SAAUL,EAApD,UACH,8BACI,cAACM,EAAA,EAAD,CAAOC,UAAWC,IACXC,KAAK,iBACLC,MAAM,oBACNC,SAAU,CAACC,IAAUC,SAGhC,8BACI,sDAUGC,EAnC0B,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAUvC,OAAO,cAACtB,EAAD,CAAsBY,SAJT,SAACW,GAJL,IAACC,IAKHD,EAAOC,eAJjBF,EAAWE,OCeJC,EAjByB,SAACC,GACrC,OAAO,sBAAKlB,UAAWC,IAAEkB,cAAlB,cACHD,EAAME,QAAQC,KAAI,SAACC,GAAD,OAAmB,8BAE7B,sBAAKtB,UAAWC,IAAEC,KAAO,IAAMD,IAAEE,OAAjC,UACI,eAAC,IAAD,CAASoB,GAAI,YAAcD,EAAEE,GAA7B,UAAiC,qBAAKC,IAAKH,EAAEG,MAAM,uBAC9CH,EAAEd,QACP,2BALmCc,EAAEE,OAUjD,cAAC,EAAD,CAAiBV,WAAYI,EAAMJ,iB,QCS5BY,EAHcC,aAZL,SAACC,GACrB,MAAO,CACHR,QAASQ,EAAMC,WAAWT,QAC1BU,OAAQF,EAAMG,KAAKD,WAGA,SAACjC,GACxB,MAAO,CACHiB,WAAY,SAACE,GAA4BnB,EAASmC,YAAwBhB,QAIrDW,CACSM,GCZvBC,EAR4B,SAAChB,GAE1C,OACI,sBAAKlB,UAAWC,IAAEkC,SAAW,IAAMlC,IAAEiB,EAAMkB,IAA3C,UAAgD,sBAAKpC,UAAWC,IAAEO,KAAlB,UAAyBU,EAAMV,KAA/B,OAA4CU,EAAMmB,YCWzFC,EAfsB,SAACpB,GAElC,IAAIqB,EAAerB,EAAMiB,SAASd,KAAI,SAAAmB,GAAC,OAAI,cAAC,EAAD,CAAeH,QAASG,EAAEH,QACX7B,KAAMgC,EAAEhC,KACR4B,GAAII,EAAEJ,IACDI,EAAEhB,OAEjE,OACI,qBAAKxB,UAAWC,IAAEkC,SAAlB,SACI,8BAAMI,O,iBCeHE,EAJUC,YAAQC,IAC7BhB,aAXkB,SAACC,GACnB,MAAO,CACHO,SAAUP,EAAMC,WAAWM,aAGV,WACrB,MAAO,MAIcO,CAGnBJ,GClBSM,UATC,WACZ,OAAS,sBAAK5C,UAAWC,IAAEmB,QAAlB,UACG,cAAC,EAAD,IACA,cAAC,EAAD","file":"static/js/4.4278447d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__JdrrJ\",\"dialogContent\":\"Dialogs_dialogContent__33x23\",\"dialogItems\":\"Dialogs_dialogItems__osIem\",\"item\":\"Dialogs_item__18_Pl\",\"active\":\"Dialogs_active__QK4rE\",\"name\":\"Dialogs_name__2Vr3x\",\"messages\":\"Dialogs_messages__2iBX6\",\"passive\":\"Dialogs_passive__2-dQ7\"};","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport {Field, reset, reduxForm} from \"redux-form\";\r\nimport {required, maxLength15} from '../../../utils/validators'\r\nimport {renderField} from \"../../Common/InputField/FormsControls\";\r\n\r\ntype PropsType = {\r\n    addMessage: (newMessageBody: string) => void,\r\n}\r\n\r\nconst DialogState: React.FC<PropsType> = ({addMessage}) => {\r\n\r\n    let addDialog = (newMessageBody: string) => {\r\n        addMessage(newMessageBody);\r\n    };\r\n\r\n    let addNewMessage = (values: any) => {\r\n        addDialog(values.newMessageBody)\r\n    }\r\n\r\n    return <DialogStateFormRedux onSubmit={addNewMessage}/>\r\n}\r\ntype DialogStateFormType = {\r\n    handleSubmit: any\r\n}\r\nconst DialogStateForm: React.FC<DialogStateFormType> = ({handleSubmit}) => {\r\n    return <form className={s.item + ' ' + s.active} onSubmit={handleSubmit}>\r\n        <div>\r\n            <Field component={renderField }\r\n                   name='newMessageBody'\r\n                   label='Enter you message'\r\n                   validate={[required, maxLength15]}\r\n            />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\nconst afterSubmit = (result: string, dispatch: any) =>\r\n    dispatch(reset('dialogAddMessageForm'));\r\n\r\nconst DialogStateFormRedux  = reduxForm({form: 'dialogAddMessageForm', onSubmitSuccess: afterSubmit\r\n})(DialogStateForm)\r\n\r\nexport default DialogState;","import React from 'react';\r\nimport s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport DialogStateForm from \"./DialogStateForm\";\r\nimport {DialogsType} from \"../../../Types/Types\";\r\n\r\ntype PropsType = {\r\n    dialogs: Array<DialogsType>,\r\n    addMessage: (newMessageBody: string) => void\r\n}\r\n\r\nconst DialogItem: React.FC<PropsType> = (props) => {\r\n    return <div className={s.dialogContent}> {\r\n        props.dialogs.map((d:DialogsType) => <div key={d.id}>\r\n\r\n                <div className={s.item + ' ' + s.active}>\r\n                    <NavLink to={'/Dialogs/' + d.id}><img src={d.src}/><br/>\r\n                        {d.name}</NavLink>\r\n                    <br/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n        <DialogStateForm addMessage={props.addMessage}/>\r\n    </div>\r\n\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport {addMessageActionCreator} from \"../../../redux/dialog-reducer\";\r\nimport DialogsItem from \"./DialogItem\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {DialogsType} from \"../../../Types/Types\";\r\n\r\ntype MapStatePropsType = {\r\n    dialogs: Array<DialogsType>,\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    addMessage: (newMessageBody: string) => void\r\n}\r\ntype OwnPropsType = {\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogs: state.dialogPage.dialogs,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        addMessage: (newMessageBody: string) => {dispatch(addMessageActionCreator(newMessageBody))},\r\n    }\r\n}\r\n\r\nconst DialogsItemContainer = connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>\r\n(mapStateToProps, mapDispatchToProps)(DialogsItem);\r\n\r\nexport default DialogsItemContainer;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\ntype PropsType = {\r\n  message: string,\r\n  name: string,\r\n  st: string,\r\n  key: number\r\n}\r\n\r\nconst MessageInside: React.FC<PropsType> = (props) => {\r\n\r\n  return (\r\n      <div className={s.messages + ' ' + s[props.st]}><div className={s.name}>{props.name}:</div>{props.message}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default MessageInside;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport MessageInside from \"./MessageInside\";\r\nimport {MessagesType} from \"../../../Types/Types\";\r\n\r\ntype PropsType = {\r\n    messages: Array<MessagesType>\r\n}\r\n\r\nconst Message: React.FC<PropsType> = (props) => {\r\n\r\n    let messageItems = props.messages.map(m => <MessageInside message={m.message}\r\n                                                              name={m.name}\r\n                                                              st={m.st}\r\n                                                              key={m.id}\r\n    />)\r\n    return (\r\n        <div className={s.messages}>\r\n            <div>{messageItems}</div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\n\r\nimport Message from \"./Message\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {MessagesType} from \"../../../Types/Types\";\r\n\r\ntype MapStatePropsType = {\r\n    messages: Array<MessagesType>,\r\n}\r\ntype MapDispatchPropsType = {\r\n\r\n}\r\ntype OwnPropsType = {\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        messages: state.dialogPage.messages\r\n    }\r\n}\r\nlet mapDispatchToProps = () => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst MessageContainer = compose(withAuthRedirect,\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>\r\n    (mapStateToProps, mapDispatchToProps)\r\n    )(Message);\r\nexport default MessageContainer","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogsItemContainer from \"./DialogItem/DialogsItemContainer\";\r\nimport MessageContainer from \"./Message/MessageContainer\";\r\n\r\nconst Dialogs = () => {\r\n    return ( <div className={s.dialogs}>\r\n                <DialogsItemContainer />\r\n                <MessageContainer />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Dialogs;"],"sourceRoot":""}