{"version":3,"sources":["components/Login/Login.jsx"],"names":["LoginForm","handleSubmit","submitting","error","captchaURL","onSubmit","name","type","label","component","renderInput","validate","required","maxLength33","className","s","formSummaryError","disabled","ExitForm","reduxForm","form","Login","submit","values","props","userSignIn","email","password","rememberMe","captcha","unSubmit","userSignOut","this","isAuth","to","src","alt","React","Component","connect","state","auth","serverMessage"],"mappings":"iRASIA,EAAY,YAAsD,IAAnDC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAChD,OACI,8BACI,uBAAMC,SAAWJ,EAAjB,UACI,8BACI,cAAC,IAAD,CAAOK,KAAK,QAAQC,KAAK,QAAQC,MAAM,QAAQC,UAAWC,IAAaC,SAAU,CAACC,IAAUC,SAEhG,8BACI,cAAC,IAAD,CAAOP,KAAK,WAAWC,KAAK,WAAWC,MAAM,WAAWC,UAAWC,IAAaC,SAAU,CAACC,IAAUC,SAEzG,8BAAMT,GACF,cAAC,IAAD,CAAOE,KAAK,UAAUC,KAAK,OAAOC,MAAM,UAAUC,UAAWC,QAEjE,gCACI,cAAC,IAAD,CAAOJ,KAAK,aAAaG,UAAU,QAAQF,KAAK,aADpD,kBAGCJ,GAAS,sBAAMW,UAAWC,IAAEC,iBAAnB,SAAsCb,IAChD,8BACI,wBAAQI,KAAK,SAASU,SAAUf,EAAhC,6BAMhBgB,EAAW,YAAuB,IAApBjB,EAAmB,EAAnBA,aACd,OACI,8BACI,sBAAMI,SAAWJ,EAAjB,SACI,8BACI,qDAOpBD,EAAYmB,YAAU,CAACC,KAAM,SAAjBD,CAA2BnB,GACvCkB,EAAWC,YAAU,CAACC,KAAM,QAAjBD,CAA0BD,G,IAE/BG,E,4MACFC,OAAS,SAAAC,GACL,EAAKC,MAAMC,WAAWF,EAAOG,MAAOH,EAAOI,SAAUJ,EAAOK,WAAYL,EAAOM,U,EAGnFC,SAAW,WACP,EAAKN,MAAMO,e,4CAIf,WACI,OAAIC,KAAKR,MAAMS,OACJ,cAAC,IAAD,CAAUC,GAAI,aAGrB,gCACI,uCACA,cAAClC,EAAD,CAAWK,SAAU2B,KAAKV,OAAQlB,WAAY4B,KAAKR,MAAMpB,aACzD,cAACc,EAAD,CAAUb,SAAU2B,KAAKF,WACzB,8BAAK,qBAAKK,IAAKH,KAAKR,MAAMpB,WAAYgC,IAAI,c,GAnBtCC,IAAMC,WAgCXC,uBARS,SAACC,GACrB,MAAO,CACHP,OAAQO,EAAMC,KAAKR,OACnB7B,WAAYoC,EAAMC,KAAKrC,WACvBsC,cAAeF,EAAMC,KAAKC,iBAIM,CAACjB,eAAYM,iBAAtCQ,CAAoDlB","file":"static/js/5.4c82208a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from '../../components/Common/InputField/FormsContorls.module.css'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {userSignIn, userSignOut} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {renderInput} from \"../Common/InputField/FormsControls\";\r\nimport {maxLength33, required} from \"../../utils/validators\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nlet LoginForm = ({ handleSubmit, submitting, error, captchaURL }) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={ handleSubmit }>\r\n                <div>\r\n                    <Field name=\"email\" type=\"email\" label=\"Email\" component={renderInput} validate={[required, maxLength33]}/>\r\n                </div>\r\n                <div>\r\n                    <Field name=\"password\" type=\"password\" label=\"password\" component={renderInput} validate={[required, maxLength33]}/>\r\n                </div>\r\n                <div>{captchaURL &&\r\n                    <Field name=\"captcha\" type=\"text\" label=\"AntiBot\" component={renderInput}/>}\r\n                </div>\r\n                <div>\r\n                    <Field name=\"rememberMe\" component='input' type=\"checkbox\"/> Remember Me\r\n                </div>\r\n                {error && <span className={s.formSummaryError}>{error}</span>}\r\n                <div>\r\n                    <button type=\"submit\" disabled={submitting}>Sign in</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nlet ExitForm = ({ handleSubmit }) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={ handleSubmit }>\r\n                <div>\r\n                    <button>Sign out</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nLoginForm = reduxForm({form: 'login'})(LoginForm)\r\nExitForm = reduxForm({form: 'exit'})(ExitForm)\r\n\r\nclass Login extends React.Component {\r\n    submit = values => {\r\n        this.props.userSignIn(values.email, values.password, values.rememberMe, values.captcha)\r\n\r\n    }\r\n    unSubmit = () => {\r\n        this.props.userSignOut()\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.isAuth) {\r\n            return <Redirect to={'/Profile'}/>\r\n        }\r\n        return (\r\n            <div>\r\n                <h1>Login</h1>\r\n                <LoginForm onSubmit={this.submit} captchaURL={this.props.captchaURL}/>\r\n                <ExitForm onSubmit={this.unSubmit}/>\r\n                <div><img src={this.props.captchaURL} alt=\"\"/></div>\r\n            </div>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaURL: state.auth.captchaURL,\r\n        serverMessage: state.auth.serverMessage\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {userSignIn, userSignOut})(Login);"],"sourceRoot":""}