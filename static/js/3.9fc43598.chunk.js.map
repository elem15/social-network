{"version":3,"sources":["components/Common/Paginator/Paginator.module.css","components/Users/Users.module.css","components/Common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","../node_modules/reselect/es/index.js","redux/users-selectors.ts","components/Users/UsersContainer.tsx"],"names":["module","exports","Paginator","totalItemCount","pageSize","currentPage","onPageChanged","portionSize","portionNumber","setPortionNumber","pagesCount","Math","ceil","pages","i","push","portionCount","leftPortionPageNumber","rightPortionPageNumber","className","cn","styles","listContainer","listContainerCn","onClick","filter","p","map","selectedPage","unSelectedPage","User","user","isAuth","isFollowingProgress","unFollow","follow","title","name","extra","to","id","style","width","height","span","src","photos","small","userPhoto","textAlign","Follow","followed","userId","status","Users","totalUsersCount","isFetching","users","Preloader","u","margin","xs","offset","sm","md","lg","xl","xxl","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","length","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","undefined","concat","selector","params","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","selectUsers","state","usersPage","allUsers","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getIsFollowingProgress","getPortionNumber","getIsAuth","auth","Title","Typography","UsersContainer","pageNumber","props","requestUsers","this","level","pageTitle","toggleIsFetching","React","Component","compose","connect"],"mappings":"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","file":"static/js/3.9fc43598.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"Paginator_listContainer__RQ9OM\",\"listContainerCn\":\"Paginator_listContainerCn__3a6o_\",\"selectedPage\":\"Paginator_selectedPage__vuYZk\",\"unSelectedPage\":\"Paginator_unSelectedPage__3PrPg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__2xFJp\",\"userPhoto\":\"Users_userPhoto__1t5f-\"};","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from 'classnames';\r\n\r\ntype PropsType = {\r\n    totalItemCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: ((p: number) => void)\r\n    portionSize?: number\r\n    portionNumber: number\r\n    setPortionNumber: (portionNumber: number) => void\r\n}\r\n\r\nconst Paginator: React.FC<PropsType> = ({totalItemCount, pageSize, currentPage,\r\n                                            onPageChanged, portionSize = 10,\r\n                                            portionNumber, setPortionNumber}) => {\r\n\r\n    const pagesCount = Math.ceil(totalItemCount / pageSize);\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    if(portionNumber === null) {portionNumber=1}\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={cn(styles.listContainer, styles.listContainerCn)}>\r\n            {leftPortionPageNumber > 1 &&\r\n            <button onClick={() => setPortionNumber(1)}>begin</button>\r\n            }\r\n            {leftPortionPageNumber > 1 &&\r\n            <button onClick={() => setPortionNumber(portionNumber - 1)}>prev</button>}\r\n            {pages\r\n                .filter((p: number) => p <= rightPortionPageNumber && p >= leftPortionPageNumber)\r\n                .map(p => {\r\n                    const selectedPage = currentPage === p;\r\n                    return <span key={p}\r\n                                 className={cn({[styles.selectedPage]: selectedPage},\r\n                                     {[styles.unSelectedPage]: !selectedPage})} onClick={() => {\r\n                        !selectedPage &&\r\n                        onPageChanged(p)\r\n                    }\r\n                    }>{p}</span>\r\n                })}\r\n            <span>\r\n            {rightPortionPageNumber < pagesCount &&\r\n            <button onClick={() => setPortionNumber(portionNumber + 1)}>next</button>\r\n            }\r\n                {rightPortionPageNumber < pagesCount &&\r\n                <button onClick={() => setPortionNumber(portionCount)}>end</button>\r\n                }</span>\r\n        </div>\r\n    )\r\n}\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport Follow from \"../Common/Follow/Follow\";\r\nimport {UserType} from \"../../Types/Types\";\r\nimport {Card, Col, Row} from \"antd\";\r\n\r\ntype PropsType = {\r\n    user: UserType,\r\n    isFollowingProgress: number[],\r\n    isAuth: boolean\r\n    unFollow: (userId: number) => void,\r\n    follow: (userId: number) => void\r\n}\r\n\r\nconst User: React.FC<PropsType> = ({user, isAuth, isFollowingProgress, unFollow, follow}) => {\r\n    return (\r\n        <Card title={user.name} extra={<NavLink to={'/Profile/' + user.id}>profile...</NavLink>}\r\n              style={{width: 220, height: 185}}>\r\n            <Row>\r\n                <Col span={12}>\r\n                    <NavLink to={'/Profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                    </NavLink>\r\n                </Col>\r\n                <Col span={12} style={{textAlign: 'center'}}>\r\n                    {isAuth &&\r\n                    <Follow followed={user.followed} userId={user.id}\r\n                            isFollowingProgress={isFollowingProgress}\r\n                            unFollow={unFollow} follow={follow}/>}\r\n                    <div>{user.status}</div>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n\r\n    )\r\n}\r\nexport default User;","import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport {UserType} from \"../../Types/Types\";\r\nimport {Col, Row} from \"antd\";\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number,\r\n    pageSize: number,\r\n    currentPage: number,\r\n    isAuth: boolean,\r\n    onPageChanged: ((p: number) => void),\r\n    isFollowingProgress: number[],\r\n    unFollow: (userId: number) => void,\r\n    follow: (userId: number) => void,\r\n    isFetching: boolean,\r\n    toggleIsFetching: ((isFetching: boolean) => void),\r\n    users: Array<UserType>\r\n    portionNumber: number\r\n    setPortionNumber: (portionNumber: number) => void\r\n}\r\n\r\nconst Users: React.FC<PropsType> = ({\r\n                   totalUsersCount, pageSize, currentPage, onPageChanged,\r\n                   isFollowingProgress, unFollow, follow,\r\n                   isFetching, users, isAuth, portionNumber, setPortionNumber\r\n               }) => {\r\n\r\n    return (\r\n        <div>\r\n            <div> {isFetching ? <Preloader/> : null}</div>\r\n            <div>\r\n                <Paginator totalItemCount={totalUsersCount} pageSize={pageSize}\r\n                           currentPage={currentPage} onPageChanged={onPageChanged}\r\n                           portionNumber={portionNumber} setPortionNumber={setPortionNumber}\r\n                />\r\n                <Row>\r\n                    {\r\n                        users.map(u =>\r\n                            <Col style={{margin: '10px 30px 10px 0'}} xs={{span: 24, offset: 0}} sm={{span: 14, offset: 2}}\r\n                                 md={{span: 10, offset: 2}}\r\n                                 lg={{span: 8, offset: 3}}\r\n                                 xl={{span: 5, offset: 1}}\r\n                                 xxl={{span: 4, offset: 2}}\r\n                                 key={u.id}\r\n                            >\r\n                            <User  user={u}\r\n                                   isFollowingProgress={isFollowingProgress}\r\n                                   unFollow={unFollow} follow={follow} isAuth={isAuth}\r\n                            />\r\n                            </Col>\r\n                        )\r\n                    }\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { createSelector } from \"reselect\";\r\nimport {AppStateType} from \"./redux-store\";\r\n\r\nexport const getUsers = (state: AppStateType) => state.usersPage.users;\r\nexport const selectUsers = createSelector(getUsers, (allUsers) => {\r\n    return  allUsers.filter(user => true)\r\n});\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getIsFollowingProgress = (state: AppStateType) => {\r\n    return state.usersPage.isFollowingProgress\r\n}\r\nexport const getPortionNumber = (state: AppStateType) => {\r\n    return state.usersPage.portionNumber\r\n}\r\nexport const getIsAuth = (state: AppStateType) => {\r\n    return state.auth.isAuth\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    unFollow,\r\n    requestUsers,\r\n    toggleIsFetching,\r\n    setPortionNumber\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\n// import {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getIsAuth,\r\n    getIsFetching,\r\n    getIsFollowingProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getPortionNumber,\r\n    selectUsers\r\n} from \"../../redux/users-selectors\";\r\nimport {UserType} from \"../../Types/Types\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Typography} from \"antd\";\r\n\r\n\r\nconst {Title} = Typography\r\n\r\ntype OwnPropsType = {\r\n    pageTitle: string\r\n}\r\ntype MapStatePropsType = {\r\n    currentPage: number,\r\n    pageSize: number,\r\n    isFollowingProgress: number[],\r\n    isFetching: boolean,\r\n    users: Array<UserType>,\r\n    totalUsersCount: number,\r\n    isAuth: boolean\r\n    portionNumber: number\r\n\r\n}\r\ntype MapDispatchPropsType = {\r\n    unFollow: (userId: number) => void,\r\n    follow: (userId: number) => void,\r\n    requestUsers: (currentPage: number, pageSize: number) => void,\r\n    toggleIsFetching: ((isFetching: boolean) => void)\r\n    setPortionNumber: (portionNumber: number) => void\r\n}\r\n\r\ntype PropsType = OwnPropsType & MapStatePropsType & MapDispatchPropsType\r\n\r\nclass UsersContainer extends React.Component<PropsType>  {\r\n\r\n    componentDidMount() {\r\n        const {requestUsers, currentPage, pageSize} = this.props;\r\n        requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {requestUsers, pageSize} = this.props;\r\n        requestUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Title level={4}>{this.props.pageTitle}</Title>\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unFollow={this.props.unFollow}\r\n                   isFetching={this.props.isFetching}\r\n                   isFollowingProgress={this.props.isFollowingProgress}\r\n                   toggleIsFetching={this.props.toggleIsFetching}\r\n                   isAuth={this.props.isAuth}\r\n                   portionNumber={this.props.portionNumber}\r\n                   setPortionNumber={this.props.setPortionNumber}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: selectUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        isFollowingProgress: getIsFollowingProgress(state),\r\n        isAuth: getIsAuth(state),\r\n        portionNumber: getPortionNumber(state)\r\n    }\r\n};\r\n\r\nexport default\r\ncompose(\r\n    //TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState\r\nconnect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>\r\n(mapStateToProps, {\r\n        follow,\r\n        unFollow,\r\n        requestUsers: requestUsers,\r\n        toggleIsFetching: toggleIsFetching,\r\n        setPortionNumber\r\n    }\r\n    ),\r\n    // withAuthRedirect\r\n)(UsersContainer);"],"sourceRoot":""}