{"version":3,"sources":["components/Users/Users.module.css","components/Common/Paginator/Paginator.module.css","components/Common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx"],"names":["module","exports","Paginator","totalItemCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","useState","portionNumber","setPortionNumber","portionCount","leftPortionPageNumber","rightPortionPageNumber","className","styles","listContainer","onClick","filter","p","map","selectedPage","unSelectedPage","User","user","isFollowingProgress","unFollow","follow","to","id","src","photos","small","userPhoto","Follow","followed","userId","name","status","Users","totalUsersCount","isFetching","users","Preloader","u","UsersContainer","pageNumber","props","requestUsers","this","toggleIsFetching","React","Component","compose","connect","state","selectUsers","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getIsFollowingProgress","setCurrentPage"],"mappings":"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","file":"static/js/3.c09afa8c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__37jCp\",\"userPhoto\":\"Users_userPhoto__156-W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"Paginator_listContainer__1C4wK\",\"selectedPage\":\"Paginator_selectedPage__3Vf54\",\"unSelectedPage\":\"Paginator_unSelectedPage__3wq28\"};","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\n\r\nconst Paginator = ({totalItemCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={styles.listContainer}>\r\n            {leftPortionPageNumber > 1 &&\r\n            <button onClick={() => setPortionNumber(1)}>begin</button>\r\n            }\r\n            {leftPortionPageNumber > 1 &&\r\n            <button onClick={() => setPortionNumber(portionNumber - 1)}>prev</button>}\r\n            {pages\r\n                .filter((p) => p <= rightPortionPageNumber && p >= leftPortionPageNumber)\r\n                .map(p => {\r\n                    let selectedPage = currentPage === p ? styles.selectedPage : styles.unSelectedPage;\r\n                    return <span key={p}\r\n                                 className={selectedPage} onClick={() => {\r\n                        currentPage !== p &&\r\n                        onPageChanged(p)\r\n                    }\r\n                    }>{p}</span>\r\n                })}\r\n            <span>\r\n            {rightPortionPageNumber < pagesCount &&\r\n            <button onClick={() => setPortionNumber(portionNumber + 1)}>next</button>\r\n            }\r\n                {rightPortionPageNumber < pagesCount &&\r\n                <button onClick={() => setPortionNumber(portionCount)}>end</button>\r\n                }</span>\r\n        </div>\r\n    )\r\n}\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport Follow from \"../Common/Follow/Follow\";\r\n\r\nconst User = ({ user, isFollowingProgress, unFollow, follow }) => {\r\n\r\n    return (\r\n\r\n        <div >\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/Profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n             <Follow followed={user.followed} userId={user.id}\r\n                     isFollowingProgress={isFollowingProgress}\r\n                     unFollow={unFollow} follow={follow}/>\r\n            </span>\r\n            <span>\r\n                <span><div>{'user.location.city'}</div><div>{'user.location.country'}</div></span>\r\n                <span><div>{user.name}</div><div>{user.status}</div></span>\r\n                <span><div>Мой ID: {user.id}</div></span>\r\n            </span>\r\n\r\n            <hr/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default User;","import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nconst Users = ({\r\n                   totalUsersCount, pageSize, currentPage, onPageChanged,\r\n                   isFollowingProgress, unFollow, follow, isFetching, users\r\n               }) => {\r\n\r\n    return (\r\n        <div>\r\n            <div> {isFetching ? <Preloader/> : null}</div>\r\n            <div>\r\n                <Paginator totalItemCount={totalUsersCount} pageSize={pageSize}\r\n                           currentPage={currentPage} onPageChanged={onPageChanged}/>\r\n\r\n                <div className={styles.users}>\r\n                    {\r\n                        users.map(u => <User key={u.id} user={u} isFollowingProgress={isFollowingProgress}\r\n                                                   unFollow={unFollow} follow={follow}/>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    unFollow,\r\n    setCurrentPage,\r\n    requestUsers,\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\n// import {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getIsFollowingProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    selectUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {requestUsers, currentPage, pageSize} = this.props;\r\n        requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {requestUsers, pageSize} = this.props;\r\n        requestUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unFollow={this.props.unFollow}\r\n                   isFetching={this.props.isFetching}\r\n                   isFollowingProgress={this.props.isFollowingProgress}\r\n                   toggleIsFetching={this.props.toggleIsFetching}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         isFollowingProgress: state.usersPage.isFollowingProgress\r\n//     }\r\n// };\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: selectUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        isFollowingProgress: getIsFollowingProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unFollow,\r\n        setCurrentPage,\r\n        requestUsers: requestUsers,\r\n    }),\r\n    // withAuthRedirect\r\n)(UsersContainer);"],"sourceRoot":""}