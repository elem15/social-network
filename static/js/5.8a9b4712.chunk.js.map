{"version":3,"sources":["components/News/components/news/news.jsx","components/News/News.jsx"],"names":["NewsPost","author","created_at","num_comments","title","points","url","extra","href","style","width","height","className","Date","toLocaleDateString","defaultProps","Title","Typography","BASE_PATH","SEARCH_PATH","SEARCH_PARAM","Messages","getSearch","searchQuery","Form","useForm","form","name","layout","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","message","console","log","onFinishFailed","errorInfo","autoComplete","placeholder","Item","label","rules","required","offset","type","htmlType","News","state","result","fetchData","fetch","then","res","json","setState","catch","error","value","this","hits","level","map","objectID","margin","xs","sm","md","lg","xl","xxl","Component"],"mappings":"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","file":"static/js/5.8a9b4712.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Card} from 'antd';\r\n\r\nimport './news.css';\r\n\r\nconst NewsPost = ({author, created_at, num_comments, title, points, url}) => (\r\n\r\n\r\n    <Card title={title} extra={<a href={url}>More</a>} style={{width: 270, height: 170}}>\r\n        <div className={'description'}>\r\n            <span className=\"text\">{`${points} points`}</span>\r\n            <span className=\"comments\">{`${num_comments} comments`}</span>\r\n            <span className=\"date\">{new Date(created_at).toLocaleDateString()}</span>\r\n        </div>\r\n        <div className=\"description\">{author}</div>\r\n    </Card>\r\n\r\n);\r\n\r\nNewsPost.propTypes = {\r\n    author: PropTypes.string,\r\n    created_at: PropTypes.string.isRequired,\r\n    num_comments: PropTypes.number,\r\n    title: PropTypes.string,\r\n    points: PropTypes.number,\r\n    url: PropTypes.string,\r\n}\r\n\r\nNewsPost.defaultProps = {\r\n    author: '',\r\n    num_comments: 0,\r\n    title: 'Here should be a title',\r\n    points: 0,\r\n    url: '#'\r\n}\r\n\r\nexport default NewsPost;\r\n","import React, {Component} from \"react\";\r\nimport {Button, Col, Form, Input, Layout, Row, Typography} from 'antd';\r\n\r\nimport NewsPost from './components/news/news'\r\n\r\n\r\nconst {Title} = Typography;\r\nconst BASE_PATH = 'https://hn.algolia.com/api/v1'\r\nconst SEARCH_PATH = '/search'\r\nconst SEARCH_PARAM = 'query='\r\n\r\n\r\nconst Messages = ({getSearch, searchQuery}) => {\r\n\r\n    const [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        getSearch(values.message)\r\n        // form.resetFields()\r\n        console.log('Success:', values);\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={form}\r\n            name=\"basic\"\r\n            layout=\"vertical\"\r\n            labelCol={{span: 8}}\r\n            wrapperCol={{span: 16}}\r\n            initialValues={{remember: true}}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            autoComplete=\"on\"\r\n            placeholder={searchQuery}\r\n        >\r\n            <Form.Item\r\n                label=''\r\n                name=\"message\"\r\n                rules={[{required: true, message: 'Please input your message!'}]}\r\n            >\r\n                <Input/>\r\n            </Form.Item>\r\n\r\n            <Form.Item wrapperCol={{offset: 0, span: 16}}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Search\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nclass News extends Component {\r\n    state = {\r\n        searchQuery: '',\r\n        result: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {searchQuery} = this.state\r\n        this.fetchData(searchQuery)\r\n    }\r\n\r\n    fetchData = (searchQuery) => {\r\n        fetch(`${BASE_PATH}${SEARCH_PATH}?${SEARCH_PARAM}${searchQuery}`)\r\n            .then(res => res.json())\r\n            .then(result => this.setState({result}))\r\n            .catch(error => error)\r\n    }\r\n\r\n    getSearch = (value) => {\r\n        // if(key === 'Enter') {\r\n        this.setState({\r\n            searchQuery: value\r\n        })\r\n        const {searchQuery} = this.state\r\n        this.fetchData(searchQuery)\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        const {searchQuery, result} = this.state\r\n        const {hits = []} = result\r\n        return (\r\n            <Layout>\r\n                <Title level={3}>Hacker News</Title>\r\n                <Messages getSearch={this.getSearch} searchQuery={searchQuery}/>\r\n                <Row>\r\n                    {\r\n                        hits.map(({author, created_at, num_comments, objectID, title, points, url}) =>\r\n                            <Col style={{margin: '10px 30px 10px 0'}} xs={{span: 24, offset: 0}} sm={{span: 14, offset: 2}}\r\n                                 md={{span: 10, offset: 2}}\r\n                                 lg={{span: 8, offset: 3}}\r\n                                 xl={{span: 6, offset: 1}}\r\n                                 xxl={{span: 5, offset: 1}}\r\n                                 key={objectID}\r\n                            >\r\n                                <NewsPost\r\n                                    author={author}\r\n                                    created_at={created_at}\r\n                                    num_comments={num_comments}\r\n                                    title={title}\r\n                                    points={points}\r\n                                    url={url}\r\n                                />\r\n                            </Col>\r\n                        )}\r\n                </Row>\r\n\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default News"],"sourceRoot":""}